apiVersion: v1
kind: Service
metadata:
  name: angular-service
spec:
  type: LoadBalancer
  selector: 
    component: ngweb
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: angular-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: ngweb
  template:
    metadata:
      labels:
        component: ngweb
    spec:
      containers:
        - name: angular
          image: 121503602521.dkr.ecr.us-east-1.amazonaws.com/angular-cesar:latest
          ports:
            - containerPort: 80
---     
apiVersion: v1
kind: Service
metadata:
  name: notify-service
spec:
  type: ClusterIP
  selector: 
    component: notify
  ports:
    - port: 3001
      targetPort: 3001
---             
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: notify-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: notify
  template:
    metadata:
      labels:
        component: notify
    spec: 
      containers:
        - name: notify
          image: 121503602521.dkr.ecr.us-east-1.amazonaws.com/notify-cesar:latest
          ports:
            - containerPort: 3001
        - name: mongodb-notify
          image: mongo
          ports:
            - containerPort: 27017     
          volumeMounts:
            - name: mongodb-data-notify
              mountPath: "/data/db"
              subPath: db-notify    
      volumes:
      - name: mongodb-data-notify
        persistentVolumeClaim:
          claimName: db-pvc-notify       
---     
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  type: ClusterIP
  selector: 
    component: auth
  ports:
    - port: 3000
      targetPort: 3000
---             
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: auth-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: auth
  template:
    metadata:
      labels:
        component: auth
    spec:
      containers:
        - name: auth
          image: 121503602521.dkr.ecr.us-east-1.amazonaws.com/auth-cesar:latest
          ports:
            - containerPort: 3000          
        - name: mongodb-auth
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data-auth
              mountPath: "/data/db"
              subPath: db-auth
      volumes:
      - name: mongodb-data-auth
        persistentVolumeClaim:
          claimName: db-pvc-auth        
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc-auth
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: auth
  volumeMode: Filesystem    
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-auth
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce  
  storageClassName: auth
  hostPath:
    path: "/data/db"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc-notify
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: notify
  volumeMode: Filesystem    
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-notify
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce  
  storageClassName: notify
  hostPath:
    path: "/data/db"
    type: DirectoryOrCreate